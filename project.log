1. setup rvm
2. setup ruby 2.0.0
3. create rails gemset
4. install rails gem
5. install git
6. install heroku toolbelt
7. generate new project
	bundle install
	add PATH to ~/.profile
	source ~/.profile to ~/.bash_profile
8. git init
9. add .secret and other hidden files to .gitignore
10. heroku create
11. update secret_token.rb with code generating token
13. install node.js:
		
		sudo apt-get install python-software-properties python g++ make
		sudo add-apt-repository ppa:chris-lea/node.js
		sudo apt-get update
		sudo apt-get install nodejs

12. create rspec tests:
	rails generate rspec:install

13. generate static_pages controller
		rails generate controller StaticPages home about --no-test-framework
		
14. generate tests for static_pages
		rails generate integration_test static_pages
		
15. automate unit tests with spork+guard

16. configured postgresql

17. added layout
	added elements
	added bootstrap-sass gem to gemfile
	updated /config/application.rb 
	
			module SampleApp
			  class Application < Rails::Application
				.
				.
				.
				config.assets.precompile += %w(*.png *.jpg *.jpeg *.gif)
			  end
			end
			
	create app/assets/stylesheets/custom.css.scss:
			@import "bootstrap";
	move shim, header and footer to partials
	add real nav  links to footer

18. add link synonims and routes
		config/routes.rb
		SampleApp::Application.routes.draw do
		  match '/help',    to: 'static_pages#help',    via: 'get'
		  match '/about',   to: 'static_pages#about',   via: 'get'
		  match '/contact', to: 'static_pages#contact', via: 'get'
		  .
		  .
		  .
		end

19. generate Users controller:
		rails generate controller Users new --no-test-framework
		
	and tests for it:
		rails generate integration_test user_pages
		
20. add route to routes.rb:

		match '/signup', to: 'user_pages#new', via:get
		
21. create users model

		rails generate model User name:string email:string
		rake db:migrate
		
		add restrictions to the user.rb:
			class User < ActiveRecord::Base
			  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
			  
			  before_save do 
				self.email = email.downcase 
			  end
			  
			  validates :name, presence:true, length: { maximum: 50 }
			  validates :email, presence:true, format: { with: VALID_EMAIL_REGEX },                  uniqueness: { case_sensitive: false }
			  
				
			  has_secure_password
			  validates :password, presence:true, length: { minimum: 6 }
			  

			end

22. add resources :users to the routes.rb to enable REST for users

23. create app/views/users/show.html.erb:

		<%= @user.name %>, <%= @user.email %>
		
24. define show action in users controller:

		  def show
			@user = User.find(params[:id])
		  end
